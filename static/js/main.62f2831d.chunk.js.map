{"version":3,"sources":["images/tree-large.jpg","styling/style.js","styling/globalStyle.js","components/SearchForm.js","pages/Home.js","pages/PhotoList.js","api/unsplash.js","components/ImageView.js","App.js","hooks/useAsyncHook.js","index.js"],"names":["BgImage","styled","div","MainPhoto","Title","h1","Input","input","Button","button","CloseButton","Image","img","ImageGrid","Card","CardImage","Wrapper","GlobalStyle","createGlobalStyle","SerachForm","images","loading","searchQuery","setSearchQuery","useState","redirect","setRedirect","onSubmit","e","preventDefault","value","onChange","event","target","placeholder","to","Home","PhotoList","SearchForm","map","image","pathname","id","src","urls","small","alt","description","console","log","axios","create","baseURL","headers","Authorization","process","ImageView","history","useHistory","back","stopPropagation","goBack","onClick","regular","type","user","name","App","setImages","setLoading","useEffect","a","unsplash","get","params","query","response","data","results","fetchImages","useAsyncHook","path","children","render","match","find","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.62f2831d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tree-large.3ecae817.jpg\";","import styled from 'styled-components';\r\nimport MainPhoto from '../images/tree-large.jpg';\r\n\r\n\r\nexport const BgImage = styled.div`\r\n    background-image: url(${MainPhoto});\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-position: bottom;\r\n    height: 100vh;\r\n    margin: 0;\r\n    padding: 0;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 3.5rem;\r\n  padding-bottom: 1rem;\r\n  text-align: center;\r\n  color: white;\r\n  text-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\nborder: none;\r\npadding: 1rem 2rem;\r\nfont-size: 1.5rem;\r\nborder-radius: 100px;\r\nwidth: 60%;\r\nmargin-right: -3.25rem;\r\nmargin-bottom: 3rem;\r\nmargin-top: 3rem;\r\nbox-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  font-size: 2rem;\r\n  text-align: center;\r\n  background-color: white;\r\n  border: none;\r\n`;\r\n\r\nexport const CloseButton = styled.button`\r\n  font-size: 1rem;\r\n  text-align: center;\r\n  border: none;\r\n  position: relative;\r\n  background-color: transparent;\r\n  color: white;\r\n  text-transform: uppercase;\r\n  right: 3rem;\r\n  bottom: 1.5rem;\r\n  z-index: 10;\r\n`;\r\nexport const Image = styled.img`\r\n max-height: 80vh;\r\n box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n position: relative;\r\n z-index: 1;\r\n`;\r\n\r\nexport const Modal = styled.img`\r\n position: relative;\r\n`;\r\n\r\nexport const ImageGrid = styled.div`\r\ncolumn-count: 3;\r\npadding: 4rem;\r\n`;\r\n\r\nexport const Card = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nexport const CardImage = styled.div`\r\n    border-radius: 10px;\r\n    padding-bottom: 1.5rem;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\nposition: relative;\r\n  margin: 0 auto;\r\n  padding: 2rem;\r\n  text-align: center;\r\n`;","import { createGlobalStyle } from 'styled-components'\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n* {\r\n    margin: 0;\r\n    padding: 0; \r\n    box-sizing: border-box;\r\n    font-size: 62.5%;\r\n  }\r\n  \r\n  *,\r\n  *::before,\r\n  *::after {\r\n    box-sizing: inherit; \r\n  }\r\n  \r\n`","import {Input, Button} from '../styling/style';\r\nimport { FaSistrix } from \"react-icons/fa\";\r\nimport React, {useState} from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {GlobalStyle} from '../styling/globalStyle';\r\n \r\nconst SerachForm = ({images, loading, searchQuery, setSearchQuery} ) => {\r\n  const [redirect, setRedirect] = useState(false);\r\n  \r\n    const handleChange = (event) => {\r\n      setSearchQuery(event.target.value)\r\n    }\r\n\r\n   const handleSubmit = e => {\r\n      e.preventDefault();\r\n      setRedirect(true);\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <form onSubmit={handleSubmit}>\r\n        <GlobalStyle />\r\n        <Input value={searchQuery} onChange={handleChange} placeholder=\"Search photos\"></Input>\r\n        <Button>\r\n        <FaSistrix />\r\n        </Button>\r\n      </form>\r\n        {redirect && <Redirect to=\"/photos\" />}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default SerachForm;","import SerachForm from '../components/SearchForm';\r\nimport {Title, Wrapper, BgImage} from '../styling/style';\r\nimport {GlobalStyle} from '../styling/globalStyle';\r\nimport { Fragment } from 'react';\r\n\r\nconst Home = ({images, loading, searchQuery, setSearchQuery}) => (\r\n  <Fragment>\r\n    <GlobalStyle />\r\n    <BgImage>\r\n    <Wrapper>\r\n    <Title>Photo Search Application</Title>\r\n    <SerachForm images={images} loading={loading} searchQuery={searchQuery} setSearchQuery={setSearchQuery}/>\r\n    </Wrapper>\r\n    </BgImage>\r\n  </Fragment>\r\n    )\r\n\r\nexport default Home;","import SearchForm from \"../components/SearchForm\";\r\nimport { Link} from \"react-router-dom\";\r\nimport {Wrapper, ImageGrid, Card, CardImage} from '../styling/style';\r\n\r\nconst PhotoList = ( {images, loading, searchQuery, setSearchQuery}) => {\r\n    return (\r\n      <Wrapper>\r\n        <SearchForm images={images} loading={loading} searchQuery={searchQuery} setSearchQuery={setSearchQuery}/>\r\n        <ImageGrid>\r\n        {images.map(image => (\r\n          <Card>\r\n            <Link\r\n            key={image.id}\r\n            to={{\r\n              pathname: `/image/${image.id}`,\r\n            }}\r\n          > \r\n          <CardImage>\r\n          <img src={image.urls.small} alt={image.description} />\r\n          </CardImage>\r\n           \r\n            {console.log(image)}\r\n          </Link>\r\n          </Card>\r\n        ))}\r\n        </ImageGrid>\r\n      </Wrapper>\r\n    );\r\n}\r\n\r\nexport default PhotoList;","import axios from 'axios';\r\n\r\nconst api_key = process.env.REACT_APP_API_KEY\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://api.unsplash.com',\r\n  headers: {\r\n    Authorization: `Client-ID ${api_key}`\r\n  }\r\n});","import { useHistory } from \"react-router-dom\";\r\nimport { Wrapper, Image, CloseButton} from '../styling/style';\r\n\r\nconst ImageView = ({ image }) => {\r\n  \r\n  let history = useHistory();\r\n\r\n  let back = e => {\r\n    e.stopPropagation();\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <Wrapper onClick={back}>\r\n      <div>\r\n      <Image src={image.urls.regular} alt={image.description} />\r\n      <CloseButton type=\"button\" onClick={back}>\r\n        X\r\n      </CloseButton>\r\n      <p>{image.description} - {image.user.name}</p>\r\n      \r\n      \r\n      </div>\r\n  </Wrapper>\r\n  )\r\n}\r\n\r\nexport default ImageView;","import './App.css';\nimport React, {useState} from 'react';\nimport Home from \"./pages/Home\";\nimport PhotoList from \"./pages/PhotoList\";\nimport useAsyncHook from './hooks/useAsyncHook';\nimport { Switch,  Route} from \"react-router-dom\";\nimport ImageView from \"./components/ImageView\";\n\n\n\nfunction App() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [images, loading] = useAsyncHook(searchQuery);\n\n    return (\n      <div>\n      <Switch>\n        <Route path=\"/photos\" children={<PhotoList images={images} loading={loading} searchQuery={searchQuery} setSearchQuery={setSearchQuery}/>} />\n        <Route path=\"/image/:id\" render={({match}) => (\n           <ImageView image={images.find(image => image.id === match.params.id)} />)}></Route>\n        <Route path=\"/\" >\n          <Home images={images} loading={loading} searchQuery={searchQuery} setSearchQuery={setSearchQuery} />\n        </Route>\n      </Switch>\n      </div>\n    )\n}\n\nexport default App;\n","import { useState, useEffect } from 'react';\r\nimport unsplash from '../api/unsplash';\r\n\r\nexport default function useAsyncHook(searchQuery) {\r\n    const [images, setImages] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n  \r\n    useEffect(() => {\r\n      async function fetchImages() {\r\n        try {\r\n          setLoading(true);\r\n          const response = await unsplash.get('/search/photos', { params: { query: searchQuery } });\r\n          setImages(response.data.results);\r\n        }\r\n        catch (error) {\r\n          setLoading(null);\r\n       }\r\n    }   \r\n          \r\n      if (searchQuery !== \"\") {\r\n        fetchImages();\r\n      }\r\n    }, [searchQuery]);\r\n  \r\n    return [images, loading];\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n     <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}