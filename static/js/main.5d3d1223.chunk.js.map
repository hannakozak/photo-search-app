{"version":3,"sources":["images/tree-large.jpg","styles/style.js","styles/globalStyle.js","components/SearchForm.js","pages/Home/Home.js","styles/media.js","pages/PhotoList/PhotoList.style.js","pages/PhotoList/PhotoList.js","components/ImageView.js","api/index.js","App.js","index.js"],"names":["BgImage","styled","div","MainPhoto","Title","h1","Input","input","Button","button","CloseButton","Image","img","Wrapper","GlobalStyle","createGlobalStyle","SerachForm","props","query","setQuery","handleSubmit","onSubmit","value","onChange","event","target","placeholder","Home","sizes","widescreen","desktop","tablet","Object","keys","reduce","acc","label","css","ImageGrid","media","Card","PhotoList","images","SearchForm","map","image","to","id","src","urls","regular","alt","description","ImageView","useParams","find","navigate","useNavigate","type","onClick","user","name","unsplash","createApi","baseURL","headers","Authorization","process","App","useState","setImages","search","setSearch","fetchData","useCallback","a","getPhotos","page","then","result","response","results","console","error","useEffect","preventDefault","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d3d1223.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tree-large.3ecae817.jpg\";","import styled from 'styled-components';\r\nimport MainPhoto from '../images/tree-large.jpg';\r\n\r\nexport const BgImage = styled.div`\r\n    background-image: url(${MainPhoto});\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-position: bottom;\r\n    height: 100vh;\r\n    margin: 0;\r\n    padding: 0;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 3.5rem;\r\n  padding-bottom: 1rem;\r\n  text-align: center;\r\n  color: white;\r\n  text-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\nborder: none;\r\npadding: 1rem 2rem;\r\nfont-size: 1.5rem;\r\nborder-radius: 100px;\r\nwidth: 40%;\r\nmargin-right: -3.25rem;\r\nmargin-bottom: 5rem;\r\nmargin-top: 5rem;\r\nbox-shadow: rgba(0, 0, 0, 0.35) 0px 1px 8px;\r\n&:focus {\r\n  outline: none;\r\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  font-size: 2rem;\r\n  text-align: center;\r\n  background-color: white;\r\n  border: none;\r\n`;\r\n\r\nexport const CloseButton = styled.button`\r\n  font-size: 1rem;\r\n  font-style: inherit;\r\n  text-align: center;\r\n  border: none;\r\n  position: relative;\r\n  background-color: transparent;\r\n  color: white;\r\n  text-transform: uppercase;\r\n  right: 5rem;\r\n  bottom: 1.5rem;\r\n  z-index: 10;\r\n`;\r\nexport const Image = styled.img`\r\n box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n max-width: 90vw;\r\n max-height: 90vh;\r\n z-index: 1;\r\n`;\r\n\r\nexport const Modal = styled.img`\r\n position: relative;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  padding: 2rem;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n`;\r\n\r\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n* {\r\n    margin: 0;\r\n    padding: 0; \r\n    box-sizing: border-box;\r\n    font-size: 62.5%;\r\n  }\r\n  \r\n  *,\r\n  *::before,\r\n  *::after {\r\n    box-sizing: inherit; \r\n  }\r\n  \r\n`","import React from 'react';\r\n\r\nimport { Input, Button } from '../styles/style';\r\nimport { FaSistrix } from 'react-icons/fa';\r\nimport { GlobalStyle } from '../styles/globalStyle';\r\n \r\nconst SerachForm = (props) => {\r\n  const { query, setQuery, handleSubmit } = props;\r\n  \r\n  const handleChange = (event) => {\r\n    setQuery(event.target.value);\r\n  }\r\n  \r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <GlobalStyle />\r\n        <Input value={ query } onChange={ handleChange } placeholder=\"Search photos\" />\r\n        <Button>\r\n          <FaSistrix />\r\n        </Button>\r\n    </form>\r\n  )\r\n}\r\n\r\n export default SerachForm;","import SerachForm from '../../components/SearchForm';\r\n\r\nimport { Title, Wrapper, BgImage }  from '../../styles/style';\r\nimport { GlobalStyle } from '../../styles/globalStyle';\r\n\r\nconst Home = ({ query, setQuery, handleSubmit }) => {\r\n \r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n        <BgImage>\r\n          <Wrapper>\r\n            <Title>Photo Search Application</Title>\r\n            <SerachForm  query={ query } setQuery={ setQuery } handleSubmit={ handleSubmit }/>\r\n         </Wrapper>\r\n        </BgImage>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home;","import { css } from \"styled-components\"\r\nconst sizes = {\r\n  widescreen: 1366,\r\n  desktop: 1024,\r\n  tablet: 768,\r\n}\r\nexport default Object.keys(sizes).reduce((acc, label) => {\r\n  acc[label] = (...args) => css`\r\n    @media (min-width: ${sizes[label]}px) {\r\n      ${css(...args)};\r\n    }\r\n  `\r\n  return acc\r\n}, {})","import styled from 'styled-components';\r\nimport media from \"../../styles/media\";\r\n\r\nexport const ImageGrid = styled.div`\r\n  column-count: 1;\r\n  \r\n${media.tablet`\r\n  column-count: 1;\r\n`};\r\n\r\n${media.desktop`\r\n  column-count: 2;\r\n  padding: 1rem;\r\n`};\r\n\r\n${media.widescreen`\r\n  column-count: 3;\r\n`};\r\n`;\r\n\r\nexport const Card = styled.div`\r\n  padding-bottom: 3rem;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  text-align: center;\r\n  margin: 3rem;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  max-width: 95%;\r\n  height: auto;\r\n`;","import SearchForm from \"../../components/SearchForm\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Wrapper, ImageGrid, Card, Image } from \"./PhotoList.style\";\r\n\r\nconst PhotoList = ({ images, query, setQuery, handleSubmit }) => {\r\n  return (\r\n    <Wrapper>\r\n      <SearchForm\r\n        query={query}\r\n        setQuery={setQuery}\r\n        handleSubmit={handleSubmit}\r\n      />\r\n      <ImageGrid>\r\n        {images.map((image) => (\r\n          <Card key={image.id}>\r\n            <Link to={`/photos/${image.id}`}>\r\n              <Image src={image.urls.regular} alt={image.description} />\r\n            </Link>\r\n          </Card>\r\n        ))}\r\n      </ImageGrid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PhotoList;\r\n","import { Wrapper, Image, CloseButton } from \"../styles/style\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nconst ImageView = ({ images }) => {\r\n  const { id } = useParams();\r\n  const image = images.find((image) => image.id === id);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleCloseImage = () => {\r\n    navigate(-1);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Image src={image.urls.regular} alt={image.description} />\r\n      <CloseButton type=\"button\" onClick={handleCloseImage}>\r\n        close\r\n      </CloseButton>\r\n      <p>Photo by {image.user.name} on Unsplash</p>\r\n      <p>{image.description}</p>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ImageView;\r\n","import { createApi } from \"unsplash-js\";\r\n\r\nconst api_key = process.env.REACT_APP_API_KEY;\r\n\r\nexport const unsplash = createApi({\r\n  baseURL: \"https://api.unsplash.com\",\r\n  headers: {\r\n    Authorization: `Client-ID ${api_key}`,\r\n  },\r\n});\r\n","import { useState, useEffect, useCallback } from \"react\";\n\nimport Home from \"./pages/Home/Home\";\nimport PhotoList from \"./pages/PhotoList/PhotoList\";\nimport ImageView from \"./components/ImageView\";\n\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\n\nimport { unsplash } from \"./api\";\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const [search, setSearch] = useState(\"\");\n\n  let navigate = useNavigate();\n\n  const fetchData = useCallback(async () => {\n    try {\n      await unsplash.search\n        .getPhotos({\n          query: query,\n          page: 10,\n        })\n        .then((result) => {\n          setImages(result.response.results);\n        });\n    } catch (error) {\n      console.error(error);\n    }\n  }, [search]);\n\n  useEffect(() => {\n    fetchData();\n    setQuery(\"\");\n  }, [search]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setSearch(query);\n\n    navigate(\"/photos\");\n  };\n\n  return (\n    <Routes>\n      <Route\n        path=\"/\"\n        element={\n          <Home\n            images={images}\n            query={query}\n            setQuery={setQuery}\n            handleSubmit={handleSubmit}\n          />\n        }\n      />\n\n      <Route\n        path=\"photos\"\n        element={\n          <PhotoList\n            images={images}\n            query={query}\n            setQuery={setQuery}\n            handleSubmit={handleSubmit}\n          />\n        }\n      ></Route>\n      <Route path=\"photos/:id\" element={<ImageView images={images} />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}